syntax = "proto3";

package rpc_process;

enum EncryptionType {
    ENCRYPTION_TYPE_PLAIN = 0;
    ENCRYPTION_TYPE_AES = 1;
    ENCRYPTION_TYPE_BLOWFISH = 2;
}

message CreateSessionRequest {
    string username = 1;
    EncryptionType agent_encryption_type = 2;
    bytes agent_encryption = 3;
}

message CreateSessionResponse {
    EncryptionType proxy_encryption_type = 1;
    bytes proxy_encryption = 2;
    string session_id = 3;
}

message ConnectRemoteRequest {
    string session_id = 1;
    string remote_address = 2;
}

message ConnectRemoteResponse {
    string session_id = 1;
    string tunnel_id = 2;
}

message RelayData {
    string session_id = 1;
    string tunnel_id = 2;
    bytes encrypted_payload = 3;
    bool finish = 4;
}

service RpcProcess {
    rpc CreateSession (CreateSessionRequest) returns (CreateSessionResponse);

    rpc ConnectRemote (ConnectRemoteRequest) returns (ConnectRemoteResponse);

    rpc Relay (stream RelayData) returns (stream RelayData);
}